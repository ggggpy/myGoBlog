<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://l63u04.coding-pages.com/</id>
    <title>ggggpy</title>
    <updated>2020-06-29T15:09:51.836Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://l63u04.coding-pages.com/"/>
    <link rel="self" href="https://l63u04.coding-pages.com/atom.xml"/>
    <subtitle>ggggpy personal blog. 个人博客/笔记</subtitle>
    <logo>https://l63u04.coding-pages.com/images/avatar.png</logo>
    <icon>https://l63u04.coding-pages.com/favicon.ico</icon>
    <rights>All rights reserved 2020, ggggpy</rights>
    <entry>
        <title type="html"><![CDATA[Windows 10 自用软件备忘]]></title>
        <id>https://l63u04.coding-pages.com/ejVzQstYf/</id>
        <link href="https://l63u04.coding-pages.com/ejVzQstYf/">
        </link>
        <updated>2020-06-23T06:24:14.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="图像">图像:</h3>
<p>字由: 字体工具</p>
<p>Snipaste: 截图/贴图工具(但是没有阴影和序号标注)</p>
]]></summary>
        <content type="html"><![CDATA[<h3 id="图像">图像:</h3>
<p>字由: 字体工具</p>
<p>Snipaste: 截图/贴图工具(但是没有阴影和序号标注)</p>
<!-- more -->
<h3 id="影音">影音:</h3>
<p>potplayer: 视频播放器</p>
<p>哔哩: UWP应用, 非官方; 开发者: 云之幻;</p>
<p>Typora:</p>
<p>Gridea:</p>
<h3 id="开发">开发:</h3>
<p>VS code: IDE</p>
<p>Goland: Go IDE</p>
<p>Sourcetree: 可视化Git工具</p>
<h3 id="美化">美化:</h3>
<p>TaskbarX:</p>
<img src="C:\Users\Gee\Downloads\screely-1592893127046.png" alt="screely-1592893127046" style="zoom: 50%;" />
<h3 id="其他">其他:</h3>
<p>TeamViewer: 最好用的远程工具;</p>
<p>Scrcpy: 安卓手机镜像工具;</p>
<p>Clash: 百度一下 你就知道</p>
<p>Carnac: 按键记录工具</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Golang 基础 -- Slice(切片)]]></title>
        <id>https://l63u04.coding-pages.com/xFPvMwOjT/</id>
        <link href="https://l63u04.coding-pages.com/xFPvMwOjT/">
        </link>
        <updated>2020-05-19T02:55:25.000Z</updated>
        <content type="html"><![CDATA[<p>由于数组的长度是固定的并且属于数组的一部分, 导致数组有很多限制;<br>
切片是一个拥有相同元素的长度可变的序列, 他是基于数组进行了一层封装, 使用比较灵活, 能够自动扩容;<br>
切片是一个引用类型, 她包含 地址/ 长度/ 容量. 切片一般用于快速操作一块数据集合.</p>
<h3 id="selice-declear">selice declear</h3>
<p><code>var sleiceName []Type</code><br>
<code>var sliceName = []type{}</code><br>
<code>sliceName := make([]type, len, cap)</code></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Win10 Ubuntu安装路径]]></title>
        <id>https://l63u04.coding-pages.com/1b3h-2wYa/</id>
        <link href="https://l63u04.coding-pages.com/1b3h-2wYa/">
        </link>
        <updated>2020-03-19T12:25:52.000Z</updated>
        <summary type="html"><![CDATA[<p>C:\Users\Chi\AppData\Local\Packages\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\LocalState\rootfs\</p>
]]></summary>
        <content type="html"><![CDATA[<p>C:\Users\Chi\AppData\Local\Packages\CanonicalGroupLimited.UbuntuonWindows_79rhkp1fndgsc\LocalState\rootfs\</p>
<!-- more -->
<figure data-type="image" tabindex="1"><img src="C:%5CUsers%5CChi%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20200319202540048.png" alt="image-20200319202540048" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[MySQL 数据库基础]]></title>
        <id>https://l63u04.coding-pages.com/HhCII-wbe/</id>
        <link href="https://l63u04.coding-pages.com/HhCII-wbe/">
        </link>
        <updated>2020-03-19T09:26:15.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="关系型数据库">关系型数据库</h3>
<p>Oracle<br>
MySQL<br>
MSSQL</p>
<h3 id="非关系型数据库">非关系型数据库</h3>
<p>Mongo DB<br>
Redis<br>
ES</p>
]]></summary>
        <content type="html"><![CDATA[<h3 id="关系型数据库">关系型数据库</h3>
<p>Oracle<br>
MySQL<br>
MSSQL</p>
<h3 id="非关系型数据库">非关系型数据库</h3>
<p>Mongo DB<br>
Redis<br>
ES</p>
<!-- more -->
<h3 id="云数据库">云数据库</h3>
<p>RDS \ PolarDB<br>
TDSQL</p>
<h3 id="mysql-厂家">MySQL 厂家</h3>
<p>Oracle  官方<br>
MariaDB<br>
Percona</p>
<h3 id="mysql-版本选择">MySQL 版本选择</h3>
<p>5.6 ****   5.6.36/5.6.38/5.6.40/5.6.46(GA时间6-12月)<br>
5.7 ***** 选择新版即可 5.7.20/5.7.22/5.7.24/5.7.26/5.7.28<br>
8.0 **      8.0.11/8.0.17/8.0.18</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ubuntu 安装 MySQL]]></title>
        <id>https://l63u04.coding-pages.com/UAz7mcF83/</id>
        <link href="https://l63u04.coding-pages.com/UAz7mcF83/">
        </link>
        <updated>2019-11-19T15:47:28.000Z</updated>
        <content type="html"><![CDATA[<p><a href="https://downloads.mysql.com/archives/community/">官网下载Mysql Generic 文件</a></p>
<h3 id="创建用户和用户组">创建用户和用户组</h3>
<p><code>useradd mysql -s /sbin/nologin</code></p>
<p><code>id mysql</code></p>
<figure data-type="image" tabindex="1"><img src="https://l63u04.coding-pages.com//post-images/1584632989281.png" alt="" loading="lazy"></figure>
<h3 id="清除历史环境">清除历史环境</h3>
<p><code>dpkg -list | grep mysql</code></p>
<p><code>sudo apt remove mysql</code></p>
<p><a href="https://www.cnblogs.com/mjhblog/p/10499772.html">详细参考</a></p>
<h3 id="创建相关目录">创建相关目录</h3>
<p>软件目录:<code>mkdir -p /app/database/</code></p>
<p>数据目录:<code>mkdir -p /data/3306</code></p>
<p>日志目录:<code>mkdir -p /binlog/3306/</code></p>
<h3 id="设置权限">设置权限</h3>
<p><code>sudo chown -R mysql.mysql /app/ /data/ /binlog/</code></p>
<h3 id="上传解压添加软连接">上传\解压\添加软连接</h3>
<p><code>cd /app/database</code></p>
<p><code>tar -xvf mysql 5.7.28xxxx.tar.gz</code></p>
<p><code>sudo rm mysql 5.7.28xxxx.tar.gz</code></p>
<p><code>sudo ln -s mysql 5.7.28xxxx mysql</code></p>
<h3 id="设置环境变量">设置环境变量</h3>
<pre><code class="language-bash">sudo vi /etc/profile
export PATH=/app/database/mysql/bin:$PATH	//Esc :wq
source /etc/profile
</code></pre>
<h3 id="初始化系统库表">初始化系统库表</h3>
<pre><code class="language-bash">mysqld --initialize-insecure --user=mysql --basedir=/app/database/mysql --datadir=/data/3306
</code></pre>
<figure data-type="image" tabindex="2"><img src="https://l63u04.coding-pages.com//post-images/1584633022208.png" alt="" loading="lazy"></figure>
<p><em>如果出现如上图报错 需要安装相关依赖:sudo apt-get install libaio-dev -y</em></p>
<h3 id="补充说明">补充说明</h3>
<p>5.6版本初始化:</p>
<pre><code class="language-bash">/app/database/mysql/scripts/mysql_install_db --user=mysql --dasedir=/app/database/mysql --datadir=/data/3306
</code></pre>
<p>5.7版本初始化:</p>
<pre><code class="language-bash">mysqld --initialize --user=mysql --dasedir=/app/database/mysql --datadir=/data/3306
//初始化后,会有12位临时密码,不能作为数据库管理密码,必须在使用前重置密码; 并且密码复杂度有要求,密码长度有要求
//[Note] A tempoary password is generated for root@localhost: xxxxxxxx+

mysqld --mysqld --initialize-insecure --user=mysql --basedir=/app/database/mysql --datadir=/data/3306
// 初始化后 无临时密码
</code></pre>
<h3 id="设置配置文件">设置配置文件</h3>
<pre><code class="language-bash">sudo vi /etc/my.cnf

[mysqld]
user=mysql
basedir=/app/database/mysql
datadir=/data/3306
server_id=6
port=3306
socket=/tmp/mysql.sock
[mysql]
socket=/tmp/mysql.sock

//Esc :wq
</code></pre>
<h3 id="修改密码">修改密码</h3>
<pre><code class="language-bash">mysqladmin -uroot -p password xxxxxxxx
</code></pre>
<pre><code>修改密码遇到 mysqld_safe A mysqld process already exists
 *解决步骤：*
1：ps aux |grep mysql  查看mysql的进程。
2：通过kill -9 杀死进程。
3：重启mysql service mysql start
</code></pre>
<h3 id="启动mysql">启动mysql</h3>
<pre><code class="language-bash">sudo cp /app/database/mysql/support-file/mysql.server /etc/init.d/mysqld
</code></pre>
<p><code>sudo service mysqld start</code></p>
<pre><code class="language-bash">mysql -uroot -p
//输入密码
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Golang 基础 -- Map(映射)]]></title>
        <id>https://l63u04.coding-pages.com/ctdnJylAG/</id>
        <link href="https://l63u04.coding-pages.com/ctdnJylAG/">
        </link>
        <updated>2019-08-01T01:46:45.000Z</updated>
        <summary type="html"><![CDATA[<p>map是一个无序得key,value类型; map 和 selice 一致, 属于引用类型; 不初始化时 == nil</p>
<h3 id="声明">声明</h3>
<pre><code class="language-golang">mapName := map[keyType]valueType     //未初始化
mapName := map[keyType]valueType{    //声明并赋值
    key1 : value1,
    key2 : value2,
}

mapName := make(map[keyType]valueType, [cap])   //申请内存空间
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<p>map是一个无序得key,value类型; map 和 selice 一致, 属于引用类型; 不初始化时 == nil</p>
<h3 id="声明">声明</h3>
<pre><code class="language-golang">mapName := map[keyType]valueType     //未初始化
mapName := map[keyType]valueType{    //声明并赋值
    key1 : value1,
    key2 : value2,
}

mapName := make(map[keyType]valueType, [cap])   //申请内存空间
</code></pre>
<!-- more -->
<h3 id="遍历">遍历</h3>
<pre><code class="language-golang">// map遍历无序
for key, value := range mapName{
    // 遍历key和value
    fmt.Println(key, value)
}

for key := range mapName{
    //只遍历key
    fmt.Println(key, mapName[key])
}
</code></pre>
<h3 id="查看是否存在key">查看是否存在key</h3>
<pre><code class="language-golang">value, ok := mapName[key]
if ok != nil {
    fmt.Println(value)
}
</code></pre>
<h3 id="删除添加修改">删除/添加/修改</h3>
<pre><code class="language-golang">//delete
delete(mapName, key)
</code></pre>
<pre><code class="language-golang">//更改或者添加
mapName[key] = value
</code></pre>
<h3 id="元素是map得切片">元素是map得切片</h3>
<pre><code class="language-golang">//use map declear slice
func mapSlice()  {
	var (	//declear slice and map
		elementMap = []map[int]int{}
		ele1 = map[int]int{1:2,2:4,4:8}
		ele2 = map[int]int{2:1,4:2,8:4}
	)
	elementMap = append(elementMap,ele1,ele2)
}
</code></pre>
<h3 id="元素是slice的map">元素是slice的map</h3>
<pre><code class="language-golang">//use slice as value decleaer map
func elementWithSlice()  {
	var elementSlice = map[string][]int{}
	elementSlice[&quot;Chinese&quot;] = []int{1,2,3,22}
}
</code></pre>
<h3 id="顺序遍历map">顺序遍历Map</h3>
<p>把Map中的key遍历出来, 添加到切片中, 然后使用<code>sort.Strings()</code>对切片进行排序, 最后遍历切片并去除map中的value</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[网络]]></title>
        <id>https://l63u04.coding-pages.com/JYD86VWPR/</id>
        <link href="https://l63u04.coding-pages.com/JYD86VWPR/">
        </link>
        <updated>2019-04-01T03:34:15.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="osi-七层模型">OSI 七层模型</h3>
<ul>
<li><strong>应用层</strong></li>
<li><strong>表示层</strong></li>
<li><strong>会话层</strong></li>
<li><strong>传输层</strong><br>
数据格式：数据段；报文(Segment) TCP协议称：段或报文段；UDP协议的数据单元成为：数据报（单位为Segment或Message）</li>
</ul>
]]></summary>
        <content type="html"><![CDATA[<h3 id="osi-七层模型">OSI 七层模型</h3>
<ul>
<li><strong>应用层</strong></li>
<li><strong>表示层</strong></li>
<li><strong>会话层</strong></li>
<li><strong>传输层</strong><br>
数据格式：数据段；报文(Segment) TCP协议称：段或报文段；UDP协议的数据单元成为：数据报（单位为Segment或Message）</li>
</ul>
<!-- more -->
<ul>
<li><strong>网络层</strong><br>
数据帧封装；拥塞控制；网际互联<br>
代表协议：IP、IPX、OSPF<br>
数据格式：数据包；分组(packet)</li>
<li><strong>数据链路层</strong><br>
数据成帧、物理地址寻址、流量控制、数据检错/重发<br>
数据格式：数据帧(Frame)</li>
<li><strong>物理层</strong><br>
数据还未经处理，以原始的电流、电压、电气形式存在；该层的典型规范包括RJ-45<br>
数据格式： 比特流(bitstream)<br>
在传输层及以上高层次中，数据传输单位统称为<strong>报文</strong></li>
</ul>
<h3 id="tcpip-四层模型">TCP/IP 四层模型</h3>
<ul>
<li><strong>应用层</strong></li>
<li><strong>传输层</strong></li>
<li><strong>网络层</strong></li>
<li><strong>数据链路层（网络接口层）</strong></li>
</ul>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[软件测试]]></title>
        <id>https://l63u04.coding-pages.com/y_8Pj4iJt/</id>
        <link href="https://l63u04.coding-pages.com/y_8Pj4iJt/">
        </link>
        <updated>2018-08-03T10:56:10.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="软件测试">软件测试</h3>
<p>ISO29119定义: 使用人工、自动的手段来运行或测量软件系统的过程，用以验证软件系统是否满足<code>规定的要求</code>，并找出<code>预期结果</code>之间的差异</p>
<p>软件测试对象：软件需求、软件概要设计、软件详细设计、软件运行环境、可运行环境、软件源代码；</p>
<p>软件测试的两个目标：测试覆盖率、测试效率</p>
]]></summary>
        <content type="html"><![CDATA[<h3 id="软件测试">软件测试</h3>
<p>ISO29119定义: 使用人工、自动的手段来运行或测量软件系统的过程，用以验证软件系统是否满足<code>规定的要求</code>，并找出<code>预期结果</code>之间的差异</p>
<p>软件测试对象：软件需求、软件概要设计、软件详细设计、软件运行环境、可运行环境、软件源代码；</p>
<p>软件测试的两个目标：测试覆盖率、测试效率</p>
<!-- more -->
<h3 id="测试原则">测试原则</h3>
<ul>
<li>
<p>测试能够显示缺陷的存在，但不能证明程序不存在缺陷；</p>
</li>
<li>
<p>穷尽测试时不可能的，应该设定测试终止条件</p>
</li>
<li>
<p>软件测试要尽早执行</p>
</li>
<li>
<p>缺陷具有群集特性（某个模块内发现缺陷，很有可能还存在其他缺陷）</p>
</li>
<li>
<p>测试的杀虫剂悖论（测试用例应不定期评审、修改；）</p>
</li>
<li>
<p>测试活动依赖于测试背景</p>
</li>
</ul>
<figure data-type="image" tabindex="1"><img src="https://tobyqin.github.io/images/2019-04/c8b20f490f1b40b28fe91e2fe48059fb636807279425994169.gif" alt="" loading="lazy"></figure>
<h3 id="测试分类">测试分类</h3>
<h4 id="按照阶段分类">按照阶段分类：</h4>
<ul>
<li>单元测试</li>
</ul>
<p>对软件中的最小可测试单元进行检查和验证；</p>
<p>能够尽早返现缺陷；有利于重构；简化集成；有利于制作文档或减少文档</p>
<p>单元测试不可能覆盖所有执行路径；单元测试投入较大</p>
<ul>
<li>集成测试</li>
</ul>
<p>在单元测试的基础上，测试将所有的单元按照概要设计规格说明的要求组装成模块、子系统或系统的过程中各部分工作是否达到或实现相应技术指标以及要求；</p>
<p>实施方案：Big Bang、自顶向下、自底向上、核心系统集成、高频集成（持续集成）；</p>
<ul>
<li>系统测试</li>
</ul>
<p>将集成过的测试软件，作为计算机系统的一个部分，与系统中其他部分结合起来，在实际运行环境下对计算机系统进行的一系列严格有效的测试，以发现软件的潜在问题，保证系统的正常运行；</p>
<ul>
<li>验收测试</li>
</ul>
<p>针对用户需求、业务流程的正式测试，确定系统是否满足验收标准，由用户、客户或其他授权机构决定是否接受系统</p>
<h4 id="按照测试手段分类">按照测试手段分类</h4>
<h4 id="黑盒测试-白盒测试">黑盒测试、白盒测试</h4>
<p>黑盒：容易实施、无需关注内部结构；贴近用户需求；  覆盖率低，自动化测试时复用率较低维护成本高；</p>
<p>关注点：</p>
<ul>
<li>是否有不正确或遗漏的功能</li>
<li>在接口上，输入是否能正确的接收？能否输出正确结果？</li>
<li>是否有数据结构的错误或外部信息访问错误？</li>
<li>性能是否能够满足要求</li>
</ul>
<p>黑盒测试的主要设计方法：</p>
<img src="http://www.spasvo.com/ckfinder/userfiles/images/2017040757391788.png" style="zoom:50%;" />
<ul>
<li>等价类划分</li>
<li>边界值分析</li>
<li>错误推测</li>
<li>因果图</li>
<li>正交实验分析</li>
<li>状态迁移图</li>
<li>流程分析</li>
</ul>
<h4 id="静态测试-动态测试">静态测试、动态测试</h4>
<h4 id="手工测试-自动化测试">手工测试、自动化测试</h4>
<h3 id="测试流程">测试流程</h3>
<h3 id="测试报告">测试报告</h3>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Golang 基础]]></title>
        <id>https://l63u04.coding-pages.com/kipw6zaZe/</id>
        <link href="https://l63u04.coding-pages.com/kipw6zaZe/">
        </link>
        <updated>2018-01-09T06:24:55.000Z</updated>
        <summary type="html"><![CDATA[<h3 id="keywords">Keywords</h3>
<p><code>break</code> <code>default</code> <code>func</code> <code>interface</code> <code>select</code> <code>case</code> <code>defer</code></p>
<p><code>go</code> <code>map</code> <code>struct</code> <code>chan</code> <code>else</code> <code>goto</code> <code>package</code> <code>switch</code></p>
<p><code>const</code> <code>fallthrough</code> <code>if</code> <code>range</code> <code>tyge</code> <code>continue</code> <code>for</code> <code>import</code></p>
<p><code>return</code> <code>var</code></p>
<h3 id="package-别名">Package 别名</h3>
<p><code>import f &quot;fmt&quot; //f.Println()</code><br>
<code>import . math //Sqrt(4.0)</code></p>
<h3 id="变量命名">变量命名</h3>
<p>🐫驼峰命名，一般首字母小写，大写具有特殊含义(程序调用外部包时，只有大写开头才能被调用)</p>
]]></summary>
        <content type="html"><![CDATA[<h3 id="keywords">Keywords</h3>
<p><code>break</code> <code>default</code> <code>func</code> <code>interface</code> <code>select</code> <code>case</code> <code>defer</code></p>
<p><code>go</code> <code>map</code> <code>struct</code> <code>chan</code> <code>else</code> <code>goto</code> <code>package</code> <code>switch</code></p>
<p><code>const</code> <code>fallthrough</code> <code>if</code> <code>range</code> <code>tyge</code> <code>continue</code> <code>for</code> <code>import</code></p>
<p><code>return</code> <code>var</code></p>
<h3 id="package-别名">Package 别名</h3>
<p><code>import f &quot;fmt&quot; //f.Println()</code><br>
<code>import . math //Sqrt(4.0)</code></p>
<h3 id="变量命名">变量命名</h3>
<p>🐫驼峰命名，一般首字母小写，大写具有特殊含义(程序调用外部包时，只有大写开头才能被调用)</p>
<!-- more -->
<h3 id="int-范围">int 范围</h3>
<p>int类型会根据操作系统变化，在32位的操作系统中，int类型是32位，在64位操作系统中同理<br>
int的取值范围：<br>
int: -2^31 ~ 2^31-1 or -2^63 ~ 2^63-1</p>
<h3 id="array">Array</h3>
<p><strong>声明🎤</strong></p>
<pre><code class="language-golang">var arrName [length]type
var arrName1 = [3]int{1,2,3}
arrName2 := [2]bool{true,flase}
</code></pre>
<h3 id="selice">Selice</h3>
<p><strong>声明</strong></p>
<pre><code class="language-golang">var seliceName = []type{elements...}
//声明切片 并初始化
seliceName := make([]type, length, capacity)
//声明 但不初始化；cap(容量)可省略 make([]int, 2, 2) == make([]int, 2)
</code></pre>
<h3 id="selice-排序">selice 排序</h3>
<p>使用sort包对selice进行排序</p>
<pre><code class="language-golang">sort.Ints(a []int) //递增排序
sort.Sort(sort.Reverse(sort.IntSelice(a []int)))	//递减排序
</code></pre>
<pre><code class="language-golang">sort.Float64s(a []float64)
sort.Sort(sort.Reverse(sort.Float64sSelice(a []float64)))
</code></pre>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Mysql 错误处理]]></title>
        <id>https://l63u04.coding-pages.com/X5LIPnrTg/</id>
        <link href="https://l63u04.coding-pages.com/X5LIPnrTg/">
        </link>
        <updated>2017-03-15T05:51:53.000Z</updated>
        <summary type="html"><![CDATA[<p>今天新装的Mysql 连接时报错</p>
<figure data-type="image" tabindex="1"><img src="https://l63u04.coding-pages.com//post-images/1583561363739.png" alt="" loading="lazy"></figure>
]]></summary>
        <content type="html"><![CDATA[<p>今天新装的Mysql 连接时报错</p>
<figure data-type="image" tabindex="1"><img src="https://l63u04.coding-pages.com//post-images/1583561363739.png" alt="" loading="lazy"></figure>
<!-- more -->
<h3 id="解决方法">解决方法</h3>
<p>原来是粗心的我没有开启mysql service<br>
<code>pa -ef</code> 或<code>sudo service mysql status</code> 检查mysql服务是否开启</p>
<figure data-type="image" tabindex="2"><img src="https://l63u04.coding-pages.com//post-images/1583561500128.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
</feed>